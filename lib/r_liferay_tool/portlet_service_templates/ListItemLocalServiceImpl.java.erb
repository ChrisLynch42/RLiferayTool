package mil.army.hrc.ikrome.<%= template_variables['project_name'] %>.service.impl;

import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import mil.army.hrc.ikrome.<%= template_variables['project_name'] %>.service.base.<%= template_variables['name']%>LocalServiceBaseImpl;
import mil.army.hrc.ikrome.<%= template_variables['project_name'] %>.model.<%= template_variables['name']%>;

/**
 * The implementation of the list item local service.
 *
 * <p>
 * All custom service methods should be put in this class. Whenever methods are added, rerun ServiceBuilder to copy their definitions into the {@link mil.army.hrc.ikrome.service.ListItemLocalService} interface.
 *
 * <p>
 * This is a local service. Methods of this service will not have security checks based on the propagated JAAS credentials because this service can only be accessed from within the same VM.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see mil.army.hrc.ikrome.service.base.ListItemLocalServiceBaseImpl
 * @see mil.army.hrc.ikrome.service.ListItemLocalServiceUtil
 */
public class <%= template_variables['name']%>LocalServiceImpl extends ListItemLocalServiceBaseImpl {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never reference this interface directly. Always use {@link mil.army.hrc.ikrome.service.ListItemLocalServiceUtil} to access the list item local service.
     */
    public <%= template_variables['name']%> add<%= template_variables['name']%>(
<% template_variables['columns'].each_with_index do |(column_name, column_object), index| %>
    <%= column_object.column_type %> <%=column_name%><% if index < template_variables['columns'].size - 1 %>,<%end%>
<% end %>) throws PortalException, SystemException{
        long itemId = counterLocalService.increment(<%= template_variables['name']%>.class.getName());
<%= template_variables['name']%> item = <%= template_variables['name']%>Persistence.create(itemId);
<% template_variables['columns'].each do |column_name, column_object| %>
    item.set<%=column_name[0,1].capitalize + column_name[1..-1]%>(<%=column_name%>);
<% end %>
        
        super.add<%= template_variables['name']%>(item);
        return item;
        
    }
    
}
